<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

     

  <!-- You could also define a traditional camel context here -->
  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">

    <dataFormats>
      <json id="jsonn" library="Jackson" />
    </dataFormats>

    <restConfiguration
     component="jetty"
     host="0.0.0.0" 
     port="9080" 
     bindingMode="json"

     contextPath="/api">
    </restConfiguration>

    <rest id="Fino">
      <post uri="/pta/wrapper">
        <route id="rest-route1" streamCache="true">
          <log id="log1" message="Request Body Recievied from user ${body} :: ${headers}"/>
        <setHeader headerName="uniqueTransactionId">
          <simple>${body[uniqueTransactionId]}</simple>
        </setHeader>
        <setHeader headerName="chargeID">
          <simple>${body[chargeID]}</simple>
        </setHeader>
         <setHeader headerName="transactionAmount">
          <simple>${body[transactionAmount]}</simple>
        </setHeader>
        <setHeader headerName="object">
          <simple>{{object}}</simple>
        </setHeader>
       <setHeader headerName="looup">
          <simple>{{lookup}}</simple>
        </setHeader>
        <setBody>
            <simple>{ "lookup" : "${header.looup}", "commands": [ { "insert": {"return-object": true, "object": { "${header.object}": { "chargeId": ${header.chargeID}, "transAmount": ${header.transactionAmount} } } } }, { "get-objects": { "out-identifier": "returnedObject" } }, { "fire-all-rules": "" }, { "dispose": {} } ] }</simple>
        </setBody>
        
        <!-- <to id="_to1" uri="velocity:RequestPacket.vm?allowTemplateFromHeader=true"/>  -->
      <log id="log2" message="Headers : ${headers} | ${header.chargeID} |"/>
         <log id="log3" message="Request Body Sent to chargesAPI: ${body}"/>
        <setHeader headerName="Accept">
          <simple>application/json</simple>
        </setHeader>
        <setHeader headerName="Content-Type">
          <simple>application/json</simple>
        </setHeader>
        <setHeader headerName="Authorization">
          <simple>{{Authorization}}</simple>
        </setHeader>
        <to id="_to2" uri="{{Url}}"/>
        <log id="log4" message="Response Received from chargesAPI ${body}"/>
        <unmarshal ref="jsonn"/>
         <!-- <unmarshal ref="jsonn"/> -->
        <setHeader headerName="ChargeDetails">
          <!-- <simple>${body[result]["execution-results"][results][1][value][0]["com.myspace.spreadsheet.ChargeDetails"]} </simple> -->
          <jsonpath>$.result["execution-results"].results[1].value[0]["com.myspace.spreadsheet.ChargeDetails"]</jsonpath>
        </setHeader>
         <!-- <to id="_to3" uri="velocity:ResponsePacket.vm?allowTemplateFromHeader=true"/>  -->
         <setBody>
            <simple>{ "uniqueTransactionId" : "${header.uniqueTransactionId}", "ChargeDetails" : "${header.ChargeDetails} }</simple>
          </setBody>
        <setHeader headerName="Accept">
          <simple>application/json</simple>
        </setHeader>
        <setHeader headerName="Content-Type">
          <simple>application/json</simple>
        </setHeader>
       <log id="log7" message=" Response Body Sent to user ${body}"/>
        </route>
      </post>
  </rest>


  </camelContext>

</beans>
